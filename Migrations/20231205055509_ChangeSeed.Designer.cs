// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PracticeLinq.Contexts;

#nullable disable

namespace PracticeLinq.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231205055509_ChangeSeed")]
    partial class ChangeSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PracticeLinq.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CustomerID");

                    b.ToTable("Cusotmers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            Name = "Saeed"
                        },
                        new
                        {
                            CustomerID = 2,
                            Name = "Alex"
                        },
                        new
                        {
                            CustomerID = 3,
                            Name = "James"
                        });
                });

            modelBuilder.Entity("PracticeLinq.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderID = 3,
                            CustomerID = 3,
                            OrderDate = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 4,
                            CustomerID = 1,
                            OrderDate = new DateTime(2021, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 5,
                            CustomerID = 2,
                            OrderDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 6,
                            CustomerID = 3,
                            OrderDate = new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 7,
                            CustomerID = 1,
                            OrderDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 8,
                            CustomerID = 2,
                            OrderDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 9,
                            CustomerID = 3,
                            OrderDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 10,
                            CustomerID = 1,
                            OrderDate = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 11,
                            CustomerID = 2,
                            OrderDate = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 12,
                            CustomerID = 3,
                            OrderDate = new DateTime(2021, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 13,
                            CustomerID = 1,
                            OrderDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 14,
                            CustomerID = 2,
                            OrderDate = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 15,
                            CustomerID = 3,
                            OrderDate = new DateTime(2022, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 16,
                            CustomerID = 1,
                            OrderDate = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 17,
                            CustomerID = 2,
                            OrderDate = new DateTime(2022, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 18,
                            CustomerID = 3,
                            OrderDate = new DateTime(2022, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 19,
                            CustomerID = 1,
                            OrderDate = new DateTime(2022, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 20,
                            CustomerID = 2,
                            OrderDate = new DateTime(2022, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 21,
                            CustomerID = 3,
                            OrderDate = new DateTime(2022, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 22,
                            CustomerID = 1,
                            OrderDate = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PracticeLinq.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("ProductID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderID", "ProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderID = 3,
                            ProductID = 103,
                            Quantity = 5
                        },
                        new
                        {
                            OrderID = 3,
                            ProductID = 104,
                            Quantity = 3
                        },
                        new
                        {
                            OrderID = 3,
                            ProductID = 105,
                            Quantity = 3
                        },
                        new
                        {
                            OrderID = 4,
                            ProductID = 105,
                            Quantity = 2
                        },
                        new
                        {
                            OrderID = 4,
                            ProductID = 106,
                            Quantity = 4
                        },
                        new
                        {
                            OrderID = 5,
                            ProductID = 101,
                            Quantity = 1
                        },
                        new
                        {
                            OrderID = 5,
                            ProductID = 102,
                            Quantity = 2
                        },
                        new
                        {
                            OrderID = 6,
                            ProductID = 103,
                            Quantity = 3
                        },
                        new
                        {
                            OrderID = 6,
                            ProductID = 104,
                            Quantity = 1
                        },
                        new
                        {
                            OrderID = 7,
                            ProductID = 105,
                            Quantity = 4
                        },
                        new
                        {
                            OrderID = 7,
                            ProductID = 106,
                            Quantity = 2
                        },
                        new
                        {
                            OrderID = 8,
                            ProductID = 101,
                            Quantity = 3
                        },
                        new
                        {
                            OrderID = 8,
                            ProductID = 102,
                            Quantity = 5
                        },
                        new
                        {
                            OrderID = 9,
                            ProductID = 103,
                            Quantity = 2
                        },
                        new
                        {
                            OrderID = 9,
                            ProductID = 104,
                            Quantity = 1
                        },
                        new
                        {
                            OrderID = 10,
                            ProductID = 105,
                            Quantity = 3
                        },
                        new
                        {
                            OrderID = 10,
                            ProductID = 106,
                            Quantity = 2
                        },
                        new
                        {
                            OrderID = 11,
                            ProductID = 101,
                            Quantity = 4
                        },
                        new
                        {
                            OrderID = 11,
                            ProductID = 102,
                            Quantity = 1
                        },
                        new
                        {
                            OrderID = 12,
                            ProductID = 103,
                            Quantity = 5
                        },
                        new
                        {
                            OrderID = 12,
                            ProductID = 104,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("PracticeLinq.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 101,
                            Name = "Widget A"
                        },
                        new
                        {
                            ProductID = 103,
                            Name = "Widget C"
                        },
                        new
                        {
                            ProductID = 104,
                            Name = "Widget D"
                        },
                        new
                        {
                            ProductID = 105,
                            Name = "Widget E"
                        },
                        new
                        {
                            ProductID = 106,
                            Name = "Widget F"
                        },
                        new
                        {
                            ProductID = 102,
                            Name = "Widget B"
                        });
                });

            modelBuilder.Entity("PracticeLinq.Models.Order", b =>
                {
                    b.HasOne("PracticeLinq.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("PracticeLinq.Models.OrderDetail", b =>
                {
                    b.HasOne("PracticeLinq.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PracticeLinq.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PracticeLinq.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PracticeLinq.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
